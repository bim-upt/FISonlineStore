{
	"info": {
		"_postman_id": "a4910c37-6fad-476e-9648-0d55438d07c7",
		"name": "Store API tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "35288737"
	},
	"item": [
		{
			"name": "Set-Up",
			"item": [
				{
					"name": "Add a buyer returns created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201, created\", () =>{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"password\":\"1234567\",\r\n    \"type\":0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a seller returns created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201, created\", () =>{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEverTakePrettyPlease2seller\",\r\n    \"password\":\"1234567\",\r\n    \"type\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a product returns created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201, created\", () =>{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"something\",\r\n    \"imgs\":\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTA7uH_q1h4ib4qNnr25HdOB_TWNfoMs_ni4A&s\",\r\n    \"code\":\"123\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\",\r\n    \"price\":123\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/products",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a card to buyer returns created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201, created\", () =>{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\":\"12345678929\",\r\n    \"expDate\":\"2029-05\",\r\n    \"cvv\":\"123\",\r\n    \"amount\":\"100\",\r\n    \"owner\":\"nameNobodyWouldEverTakePrettyPlease2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/cards",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cards"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Card tests",
			"item": [
				{
					"name": "Add existing card returns conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409, card exists\", () =>{\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\":\"12345678929\",\r\n    \"expDate\":\"2029-05\",\r\n    \"cvv\":\"123\",\r\n    \"amount\":\"100\",\r\n    \"owner\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/cards",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add card to user which already has card returns conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409, user has a card\", () =>{\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\":\"12345678929\",\r\n    \"expDate\":\"2029-05\",\r\n    \"cvv\":\"023\",\r\n    \"amount\":\"100\",\r\n    \"owner\":\"nameNobodyWouldEverTakePrettyPlease2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/cards",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add card to non-existing user returns not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, user not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\":\"12345678929\",\r\n    \"expDate\":\"2029-05\",\r\n    \"cvv\":\"155\",\r\n    \"amount\":\"100\",\r\n    \"owner\":\"nameNobodyWouldEverTakePrettyPlease23ElectricPlease\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/cards",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cards"
							]
						}
					},
					"response": []
				},
				{
					"name": "Go below zero funds returns payment requiered",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 402, not enough funds\", () =>{\r",
									"    pm.response.to.have.status(402);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\":\"12345678929\",\r\n    \"expDate\":\"2029-05\",\r\n    \"cvv\":\"123\",\r\n    \"amount\":\"100\",\r\n    \"owner\":\"nameNobodyWouldEverTakePrettyPlease2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/cards/addAmount?amount=-10000",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cards",
								"addAmount"
							],
							"query": [
								{
									"key": "amount",
									"value": "-10000"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add funds to non-existing card returns not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, card not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\":\"12345678929\",\r\n    \"expDate\":\"2029-05\",\r\n    \"cvv\":\"025\",\r\n    \"amount\":\"100\",\r\n    \"owner\":\"nameNobodyWouldEverTakePrettyPlease2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/cards/addAmount?amount=100",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cards",
								"addAmount"
							],
							"query": [
								{
									"key": "amount",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add funds returns ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, funds added\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\":\"12345678929\",\r\n    \"expDate\":\"2029-05\",\r\n    \"cvv\":\"123\",\r\n    \"amount\":\"100\",\r\n    \"owner\":\"nameNobodyWouldEverTakePrettyPlease2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/cards/addAmount?amount=100",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cards",
								"addAmount"
							],
							"query": [
								{
									"key": "amount",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete non-existent card returns not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, card not founds\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"number\":\"12345678929\",\r\n    \"expDate\":\"2029-05\",\r\n    \"cvv\":\"028\",\r\n    \"amount\":\"100\",\r\n    \"owner\":\"nameNobodyWouldEverTakePrettyPlease2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/cards/delete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"cards",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Add existing product returns conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409, product exists\", () =>{\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"something\",\r\n    \"imgs\":\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTA7uH_q1h4ib4qNnr25HdOB_TWNfoMs_ni4A&s\",\r\n    \"code\":\"123\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\",\r\n    \"price\":123\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/products",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add to buyer returns bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, buyer not a seller\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"something\",\r\n    \"imgs\":\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTA7uH_q1h4ib4qNnr25HdOB_TWNfoMs_ni4A&s\",\r\n    \"code\":\"123\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"price\":123\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/products",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add to inexisting seller returns not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, seller not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"something\",\r\n    \"imgs\":\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTA7uH_q1h4ib4qNnr25HdOB_TWNfoMs_ni4A&s\",\r\n    \"code\":\"123\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease23ElectricPlease\",\r\n    \"price\":123\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/products",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify product returns ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, modified\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"somethingElse\",\r\n    \"imgs\":\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTA7uH_q1h4ib4qNnr25HdOB_TWNfoMs_ni4A&s\",\r\n    \"code\":\"123\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\",\r\n    \"price\":123\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/products/modify",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"products",
								"modify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Modify inexisting product returns not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"somethingElse\",\r\n    \"imgs\":\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTA7uH_q1h4ib4qNnr25HdOB_TWNfoMs_ni4A&s\",\r\n    \"code\":\"12345\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\",\r\n    \"price\":123\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/products/modify",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"products",
								"modify"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, ok\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/products",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"products"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Place order returns created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201, order placed\", () =>{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"buyer\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"products\":[\r\n        {\r\n            \"code\":\"123\",\r\n            \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/orders/place",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"place"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place order as seller returns bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, user is seller\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"buyer\":\"nameNobodyWouldEverTakePrettyPlease2seller\",\r\n    \"products\":[\r\n        {\r\n            \"code\":\"123\",\r\n            \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/orders/place",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"place"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place order non existent buyer returns not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, no such buyer\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"buyer\":\"nameNobodyWouldEverTakePrettyPlease2electricbungaloo\",\r\n    \"products\":[\r\n        {\r\n            \"code\":\"123\",\r\n            \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/orders/place",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"place"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place order not enough funds returns payment requiered",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 402, not enough funds for order\", () =>{\r",
									"    pm.response.to.have.status(402);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"buyer\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"products\":[\r\n        {\r\n            \"code\":\"123\",\r\n            \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n        },\r\n        {\r\n            \"code\":\"123\",\r\n            \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/orders/place",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"place"
							]
						}
					},
					"response": []
				},
				{
					"name": "Place order no eligible product returns bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, no eligible product\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"buyer\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"products\":[\r\n        {\r\n            \"code\":\"123123123123\",\r\n            \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n        },\r\n        {\r\n            \"code\":\"123456\",\r\n            \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/orders/place",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"place"
							]
						}
					},
					"response": []
				},
				{
					"name": "get buyer's orders returns found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302, found\", () =>{\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/v1/orders/buyer/nameNobodyWouldEverTakePrettyPlease2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"buyer",
								"nameNobodyWouldEverTakePrettyPlease2"
							]
						}
					},
					"response": []
				},
				{
					"name": "get buyer's orders as seller returns bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, user is seller\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/v1/orders/buyer/nameNobodyWouldEverTakePrettyPlease2seller",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"buyer",
								"nameNobodyWouldEverTakePrettyPlease2seller"
							]
						}
					},
					"response": []
				},
				{
					"name": "get seller's orders returns ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302, found\", () =>{\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/v1/orders/seller/nameNobodyWouldEverTakePrettyPlease2seller",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"seller",
								"nameNobodyWouldEverTakePrettyPlease2seller"
							]
						}
					},
					"response": []
				},
				{
					"name": "get seller's orders as buyer returns bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, user is buyer\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/v1/orders/seller/nameNobodyWouldEverTakePrettyPlease2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"seller",
								"nameNobodyWouldEverTakePrettyPlease2"
							]
						}
					},
					"response": []
				},
				{
					"name": "get non existent orders returns not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, user not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/v1/orders/seller/nameNobodyWouldEverTakePrettyPlease2eadsklkadlsdakjsklds",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"seller",
								"nameNobodyWouldEverTakePrettyPlease2eadsklkadlsdakjsklds"
							]
						}
					},
					"response": []
				},
				{
					"name": "get non existent orders returns not found Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, user not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/v1/orders/buyer/nameNobodyWouldEverTakePrettyPlease2eadsklkadlsdakjsklds",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"orders",
								"buyer",
								"nameNobodyWouldEverTakePrettyPlease2eadsklkadlsdakjsklds"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Add existing user return conflict",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 409, already exists\", () =>{\r",
									"    pm.response.to.have.status(409);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"password\":\"1234567\",\r\n    \"type\":0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user info returns found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 302, info got\", () =>{\r",
									"    pm.response.to.have.status(302);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"password\":\"1234567\",\r\n    \"type\":0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPlease2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPlease2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get non-user info returns not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, who?\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"password\":\"1234567\",\r\n    \"type\":0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPlease2sa;laskasl;fksa;lfks;",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPlease2sa;laskasl;fksa;lfks;"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add product to buyer history return created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201, done\", () =>{\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"123\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/addHistory/nameNobodyWouldEverTakePrettyPlease2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"addHistory",
								"nameNobodyWouldEverTakePrettyPlease2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add product to seller history return bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, this not a buyer\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"123\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/addHistory/nameNobodyWouldEverTakePrettyPlease2seller",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"addHistory",
								"nameNobodyWouldEverTakePrettyPlease2seller"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add product to non-user history return not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"123\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/addHistory/nameNobodyWouldEverTakePrettyPlease2sellersadasdsad",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"addHistory",
								"nameNobodyWouldEverTakePrettyPlease2sellersadasdsad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add unknown product to buyer history return not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"12asd3\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/addHistory/nameNobodyWouldEverTakePrettyPlease2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"addHistory",
								"nameNobodyWouldEverTakePrettyPlease2"
							]
						}
					},
					"response": []
				},
				{
					"name": "get buyer history return ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, ok\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"12asd3\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/getHistory/nameNobodyWouldEverTakePrettyPlease2",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"getHistory",
								"nameNobodyWouldEverTakePrettyPlease2"
							]
						}
					},
					"response": []
				},
				{
					"name": "get seller history return bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, no\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"12asd3\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/getHistory/nameNobodyWouldEverTakePrettyPlease2seller",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"getHistory",
								"nameNobodyWouldEverTakePrettyPlease2seller"
							]
						}
					},
					"response": []
				},
				{
					"name": "get non-user history return not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"code\":\"12asd3\",\r\n    \"seller\":\"nameNobodyWouldEverTakePrettyPlease2seller\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/getHistory/nameNobodyWouldEverTakePrettyPlease2sellerasdsadasdsad",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"getHistory",
								"nameNobodyWouldEverTakePrettyPlease2sellerasdsadasdsad"
							]
						}
					},
					"response": []
				},
				{
					"name": "get product stats return ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, found\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPlease2seller/getProductStats?code=123",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPlease2seller",
								"getProductStats"
							],
							"query": [
								{
									"key": "code",
									"value": "123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get non-product stats return not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPlease2seller/getProductStats?code=123asd",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPlease2seller",
								"getProductStats"
							],
							"query": [
								{
									"key": "code",
									"value": "123asd"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get product stats from non-seller return bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, this is a buyer\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPlease2/getProductStats?code=123",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPlease2",
								"getProductStats"
							],
							"query": [
								{
									"key": "code",
									"value": "123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get product stats from non-user return not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, who?\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPleadasdasdasdasdaase2/getProductStats?code=123",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPleadasdasdasdasdaase2",
								"getProductStats"
							],
							"query": [
								{
									"key": "code",
									"value": "123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get stats from seller return ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, ok\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPlease2seller/getStats",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPlease2seller",
								"getStats"
							]
						}
					},
					"response": []
				},
				{
					"name": "get stats from buyer return bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, not ok\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPlease2/getStats",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPlease2",
								"getStats"
							]
						}
					},
					"response": []
				},
				{
					"name": "get stats from non-user return not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404, not found\", () =>{\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/nameNobodyWouldEverTakePrettyPleasasdadsadsae2/getStats",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"nameNobodyWouldEverTakePrettyPleasasdadsadsae2",
								"getStats"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user with bad credentials return bad request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400, bad password!\", () =>{\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEverTakePrettyPlease2seller\",\r\n    \"password\":\"1234561237\",\r\n    \"type\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/delete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete user that does not exist return ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, technically deleted no?\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEvasdasderTakePrettyPlease2seller\",\r\n    \"password\":\"1234561237\",\r\n    \"type\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/delete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tear Down",
			"item": [
				{
					"name": "Delete seller",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, delete successfull\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEverTakePrettyPlease2seller\",\r\n    \"password\":\"1234567\",\r\n    \"type\":1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/delete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"delete"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete buyer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200, delete successfull\", () =>{\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"nameNobodyWouldEverTakePrettyPlease2\",\r\n    \"password\":\"1234567\",\r\n    \"type\":0\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/v1/users/delete",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"v1",
								"users",
								"delete"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}